/* semantics */
.sort-handle {
  .h/*eader*/ { @apply flex w-full }
  .k/*ey*/ { @apply break-all }
  .t/*ype*/ {
    @apply inline break-words pr-4
  }
}
.model_number {
  > .sort-handle { @apply flex relative }
  > .sort-handle > * { @apply w-full }

  counter-reset: model;
  > nav::before {
    counter-increment: model;
    content: "#" counter(model);
    @apply absolute text-xs leading-6 mx-4 text-gray-600
  }
}

/* highlight */
[data-group='root'] {
  > .sort-handle { @apply py-4 shadow w-full scroll-mt-4 }
  > .sort-handle:not(.sortable-selected) { @apply bg-black bg-opacity-20 }
  > .sort-handle.sortable-selected {
    @apply bg-gray-800 bg-opacity-40;
    > ul { @apply bg-transparent }
  }
}
.sortable-selected {
  /* leaf node */
  @apply bg-gray-700 bg-opacity-40;
  /* folder node */
  > .h { @apply bg-gray-700 }
  /* folder's body */
  > ul { @apply bg-gray-800 }
}
/* highlight DnD */
.sortable-ghost { @apply h-full py-0 border border-green-600 border-dashed -my-px -ml-px }
.sortable-drag { @apply flex list-none }
/* hightlight navigation */
[data-group='root'] [role='treeitem']:focus {
  @apply border border-gray-800 border-dashed
}

/* Function - Add */
[data-group='root'] {
  .sort-handle .add-field { @apply hidden }
  .sort-handle.sortable-selected.multi {
    > .h > .add-field { @apply hidden }
  }
  .sort-handle.sortable-selected {
    > .h > .add-field { @apply inline }
  }
}
/* Function - Change type */
.tippy-content {
  @apply p-2 bg-gray-100 rounded shadow-xl text-gray-900
}
.autoComplete_result { @apply border border-transparent px-2 py-1 }
.autoComplete_selected.notfound { @apply rounded border-gray-400 bg-gray-200 }
.autoComplete_selected { @apply rounded border-pink-400 bg-pink-100 }
.autoComplete_highlighted { @apply text-pink-500 font-semibold }
